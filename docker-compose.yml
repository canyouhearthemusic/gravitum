services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        restart: always
        ports:
            - "$APP_PORT:8080"
        env_file:
            - .env
        environment:
            - APP_NAME=$APP_NAME
            - HTTP_PORT=$APP_PORT
            - LOG_LEVEL=$LOG_LEVEL
            - PG_URL=postgres://$DB_USER:$DB_PASSWORD@$DB_HOST:$DB_PORT/$DB_NAME?sslmode=disable
        depends_on:
            db:
                condition: service_healthy
        healthcheck:
            test:
                [
                    "CMD",
                    "wget",
                    "--spider",
                    "-q",
                    "http://localhost:8080/swagger/index.html",
                ]
            interval: 10s
            timeout: 5s
            retries: 3
            start_period: 5s

    db:
        image: postgres:16-alpine
        env_file:
            - .env
        environment:
            - POSTGRES_USER=$DB_USER
            - POSTGRES_PASSWORD=$DB_PASSWORD
            - POSTGRES_DB=$DB_NAME
        ports:
            - "$DB_PORT:5432"
        volumes:
            - postgres-data:/var/lib/postgresql/data
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 5s
            timeout: 5s
            retries: 5

    migrate:
      image: migrate/migrate
      volumes:
        - ./db/migrations:/migrations
      command: -path=/migrations/ -database=postgres://$DB_USER:$DB_PASSWORD@$DB_HOST:$DB_PORT/$DB_NAME?sslmode=disable up
      env_file:
        - .env
      depends_on:
        db:
          condition: service_healthy


volumes:
    postgres-data:
